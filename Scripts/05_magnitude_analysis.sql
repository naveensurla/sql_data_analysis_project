/*
===============================================================================
Magnitude Analysis
===============================================================================
Purpose:
    - To quantify data and group results by specific dimensions.
    - For understanding data distribution across categories.

SQL Functions Used:
    - Aggregate Functions: SUM(), COUNT(), AVG()
    - GROUP BY, ORDER BY
===============================================================================
*/

-- Total customers by country
SELECT
    country,
    COUNT(customer_key) AS total_customers
FROM dim_customers
GROUP BY country
ORDER BY total_customers DESC;


-- Total customers by gender
SELECT
    gender,
    COUNT(customer_key) AS total_customers
FROM dim_customers
GROUP BY gender
ORDER BY total_customers DESC;


-- Total products by category
SELECT
    category,
    COUNT(product_key) AS total_products
FROM dim_products
GROUP BY category
ORDER BY total_products DESC;


-- Average product cost by category
SELECT
    category,
    ROUND(AVG(cost), 2) AS avg_cost
FROM dim_products
GROUP BY category
ORDER BY avg_cost DESC;


-- Total revenue generated by each product category
SELECT
    p.category,
    SUM(IFNULL(f.sales_amount, 0)) AS total_revenue
FROM fact_sales f
LEFT JOIN dim_products p ON p.product_key = f.product_key
GROUP BY p.category
ORDER BY total_revenue DESC;


-- Total revenue generated by each customer
SELECT
    c.customer_key,
    c.first_name,
    c.last_name,
    SUM(IFNULL(f.sales_amount, 0)) AS total_revenue
FROM fact_sales f
LEFT JOIN dim_customers c ON c.customer_key = f.customer_key
GROUP BY 
    c.customer_key,
    c.first_name,
    c.last_name
ORDER BY total_revenue DESC;


-- Total quantity of items sold by country
SELECT
    c.country,
    SUM(IFNULL(f.quantity, 0)) AS total_sold_items
FROM fact_sales f
LEFT JOIN dim_customers c ON c.customer_key = f.customer_key
GROUP BY c.country
ORDER BY total_sold_items DESC;
